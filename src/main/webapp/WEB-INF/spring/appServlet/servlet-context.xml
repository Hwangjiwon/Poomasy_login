<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg
			value="803938964966-83d2tf3ia82a3b4qm9nq8r39mhe6v074.apps.googleusercontent.com" />
		<beans:constructor-arg
			value="AVFi8uURwznGiSJkye5Z74am" />
	</beans:bean>

	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope"
			value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri"
			value="http://localhost:8090/myapp/member/googleCallback" />
	</beans:bean>


	<context:component-scan
		base-package="com.coderdy.myapp" />
	<context:component-scan
		base-package="com.coderdy.myapp.member.controller" />
	<context:component-scan
		base-package="com.coderdy.myapp.member.model" />
	<context:component-scan
		base-package="com.coderdy.myapp.member.dao" />
	<context:component-scan
		base-package="com.coderdy.myapp.member.dao.mapper" />
	<context:component-scan
		base-package="com.coderdy.myapp.member.service" />
	<context:component-scan
		base-package="com.coderdy.myapp.naver" />
	<context:component-scan
		base-package="com.coderdy.myapp.kakao" />
	<context:component-scan
		base-package="com.coderdy.myapp.facebook" />

	<context:annotation-config>
		<context:component-scan
			base-package="com.coderdy.myapp">
			<context:include-filter type="annotation"
				expression="org.springframework.stereotype.Repository" />
		</context:component-scan>
	</context:annotation-config>

	<beans:bean id="memberDao"
		class="com.coderdy.myapp.member.dao.MemberDAO" />
	<beans:bean id="member"
		class="com.coderdy.myapp.member.model.MemberVO" />
	<beans:bean id = "snsMember"
		class="com.coderdy.myapp.member.model.SnsMemberVO" />
	<beans:bean id="memberService"
		class="com.coderdy.myapp.member.service.MemberService" />
	<beans:bean id="naverLoginBO"
		class="com.coderdy.myapp.naver.NaverLoginBO" />
	<beans:bean id="kakaoLogin"
		class="com.coderdy.myapp.kakao.KakaoLogin" />
	<beans:bean id="facebookLogin"
		class="com.coderdy.myapp.facebook.FacebookController" />


</beans:beans>
